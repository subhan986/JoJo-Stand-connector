'use client';

import { Check, Copy, ExternalLink } from 'lucide-react';
import type { AnalyzeJoJoConnectionOutput } from '@/ai/flows/analyze-jojo-connection';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import BizarreOMeter from './bizarre-o-meter';
import { Button } from '../ui/button';
import { useToast } from '@/hooks/use-toast';
import { useState } from 'react';

interface ResultsDisplayProps {
  result: AnalyzeJoJoConnectionOutput;
}

export default function ResultsDisplay({ result }: ResultsDisplayProps) {
    const { toast } = useToast();
    const [isCopied, setIsCopied] = useState(false);

    const formatResultForSharing = () => {
        let text = `*${result.connectionTitle}*\n\n`;
        text += "The Path of Fate:\n";
        result.connectionSteps.forEach((step, index) => {
            text += `${index + 1}. ${step}\n`;
        });
        text += `\nBizarre-o-Meter: ${result.bizarreOMeter}/5\n`;
        if (result.supportingEvidence && result.supportingEvidence.length > 0) {
            text += "\nSupporting Evidence:\n";
            result.supportingEvidence.forEach(evidence => {
                text += `- ${evidence}\n`;
            });
        }
        text += "\nGenerated by Stand Connector";
        return text;
    };

    const handleShare = () => {
        const textToCopy = formatResultForSharing();
        navigator.clipboard.writeText(textToCopy).then(() => {
            setIsCopied(true);
            toast({
                title: 'Copied to Clipboard!',
                description: 'The bizarre connection is ready to be shared.',
            });
            setTimeout(() => setIsCopied(false), 2000);
        }).catch(err => {
            console.error('Failed to copy text: ', err);
            toast({
                variant: 'destructive',
                title: 'Copy Failed',
                description: 'Could not copy the result to your clipboard.',
            });
        });
    };

  return (
    <Card className="border-accent border-2 shadow-lg shadow-accent/10">
      <CardHeader>
        <CardTitle className="font-headline text-3xl text-accent">{result.connectionTitle}</CardTitle>
        <CardDescription>Your personalized JoJo connection analysis is complete.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        <div>
          <h3 className="font-semibold text-lg mb-2">The Path of Fate:</h3>
          <ul className="space-y-3 list-inside">
            {result.connectionSteps.map((step, index) => (
              <li key={index} className="flex items-start">
                <span className="text-accent font-bold mr-3">{index + 1}.</span>
                <p className="flex-1 text-muted-foreground">{step}</p>
              </li>
            ))}
          </ul>
        </div>
        
        <BizarreOMeter rating={result.bizarreOMeter} />

        {result.supportingEvidence && result.supportingEvidence.length > 0 && (
          <div>
            <h3 className="font-semibold text-lg mb-2">Supporting Evidence:</h3>
            <ul className="space-y-2">
                {result.supportingEvidence.map((evidence, index) => (
                    <li key={index} className="text-muted-foreground">
                        <a 
                            href={evidence} 
                            target="_blank" 
                            rel="noopener noreferrer" 
                            className="flex items-center text-accent hover:underline"
                        >
                            <ExternalLink className="w-4 h-4 mr-2" />
                            {evidence}
                        </a>
                    </li>
                ))}
            </ul>
          </div>
        )}
      </CardContent>
      <CardFooter>
        <Button onClick={handleShare} className="w-full bg-accent hover:bg-accent/90 text-accent-foreground">
            {isCopied ? <Check className="mr-2 h-4 w-4" /> : <Copy className="mr-2 h-4 w-4" />}
            {isCopied ? 'Copied!' : '"To Be Continued..." (Share Result)'}
        </Button>
      </CardFooter>
    </Card>
  );
}
